services:
  traefik:
    image: traefik:v2.1
    container_name: traefik
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.mainresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.mainresolver.acme.email=postmaster@example.com"
      - "--certificatesresolvers.mainresolver.acme.storage=/letsencrypt/acme.json"

    ports:
      - "80:80"
      - "443:443"

    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile

    labels:
      - "traefik.enable=true"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=mainresolver"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile

    labels:
      - "traefik.enable=true"
      - "traefik.http.services.backend.loadbalancer.server.port=80"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=mainresolver"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"

  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cobwebai
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:
